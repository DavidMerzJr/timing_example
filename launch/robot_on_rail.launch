<launch>
  <!-- Broadcast static tf for robot root -->
  <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="-2.5 0 0 0 0 0 world rail_base_link 100" respawn="true"/>

  <!-- Joint State Publisher -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" respawn="true">
    <rosparam command="load" file="$(find timing_example)/config/source_list.yaml"/>
  </node>
  <!--<node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" respawn="true"/>-->

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- Load universal robot description format (URDF) -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find timing_example)/urdf/robot_on_rail.xacro'" />
  <!-- The semantic description that corresponds to the URDF -->
  <param name="robot_description_semantic" textfile="$(find timing_example)/config/robot_on_rail.srdf" />
  <!-- Load Joint names -->
  <rosparam command="load" file="$(find timing_example)/config/joint_names.yaml" />

  <group>
    <remap from="/joint_states" to="/robot_joint_states"/>
    <node pkg="industrial_robot_simulator" type="industrial_robot_simulator" name="industrial_robot_simulator" output="screen" respawn="true"/>
    <node pkg="industrial_robot_client" type="joint_trajectory_action" name="joint_trajectory_action" output="screen" respawn="true"/>
  </group>

  <!-- Launch RViz so we can see things -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find timing_example)/config/robot_on_rail.rviz" required="true"/>

  <!-- Node that does the thing -->
  <node pkg="timing_example" type="timing_example_sim" name="run_the_sim" output="screen"/>
</launch>
